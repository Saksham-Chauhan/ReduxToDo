{"version":3,"sources":["components/List.js","actions/index.js","components/Todo.js","App.js","reducer/adddel.js","reducer/index.js","store.js","index.js"],"names":["List","props","dispatch","useDispatch","className","onClick","type","id","value","Todo","obj","useSelector","state","change","useState","item","setitem","placeholder","onChange","event","target","data","payload","Date","getTime","toString","alert","list","map","val","App","initialstate","action","ne","filter","rootreducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"4LAsBeA,EAlBF,SAACC,GACX,IAAMC,EAAWC,cAEhB,OACC,qCACG,mBACAC,UAAU,cACV,cAAY,OACZC,QAAS,WACLH,ECHF,CACFI,KAAM,MACNC,GDCiBN,EAAMM,QAGvB,6BAAKN,EAAMO,QACX,2BEwBOC,EApCF,WACZ,IAAOC,EAAKC,aAAY,SAACC,GAAD,OAASA,EAAMC,UACjCX,EAAWC,cAElB,EAAsBW,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACI,OACI,mCACA,qBAAKZ,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,2CACA,uBAAOE,KAAK,OAAOW,YAAY,cAAcT,MAAOO,EAAMG,SAAU,SAACC,GAASH,EAAQG,EAAMC,OAAOZ,UACnG,wBAAQJ,UAAU,UAAUC,QAAS,WDhBlC,IAACgB,ECiBAN,EAAKb,GDjBLmB,ECiBkBN,EDhB5B,CACFT,KAAM,MACNgB,QAAQ,CACJf,IAAG,IAAIgB,MAAOC,UAAUC,WACxBJ,KAAKA,MCaIK,MAAM,mBACPV,EAAQ,KAHZ,eAKA,uBACA,uBACA,6BAEIN,EAAIiB,KAAKC,KAAI,SAACC,GACV,OACI,cAAC,EAAD,CAAMrB,MAAOqB,EAAIR,KAAmBd,GAAIsB,EAAItB,IAAhBsB,EAAItB,SAK5C,qBAAKH,UAAU,OAAf,SACA,wBAAQA,UAAU,MAAMC,QAAS,kBAAIH,EDjB3C,CACFI,KAAM,YCgBE,kCCpBDwB,EAVH,WAGR,OACI,mCACA,cAAC,EAAD,O,sBCRFC,EAAa,CACfJ,KAAK,IAgCMd,EA7BA,WAA8B,IAA7BD,EAA4B,uDAAtBmB,EAAaC,EAAS,uCACxC,OAAOA,EAAO1B,MACV,IAAK,MACL,MAAgB0B,EAAOV,QAAhBf,EAAP,EAAOA,GAAGc,EAAV,EAAUA,KAEV,kCACOT,GADP,IAEIe,KAAK,GAAD,mBACGf,EAAMe,MADT,CAEA,CACIpB,GAAGA,EACHc,KAAKA,OAIjB,IAAK,MACG,IAAMY,EAAKrB,EAAMe,KAAKO,QAAO,SAACxB,GAAD,OAAOA,EAAIH,KAAKyB,EAAOzB,MACxD,kCACOK,GADP,IAEIe,KAAKM,IAEb,IAAK,SACD,kCACOrB,GADP,IAEIe,KAAKI,EAAaJ,OAE1B,QAAS,OAAOf,ICvBTuB,EAJIC,YAAgB,CAC/BvB,WCAWwB,EADFC,YAAYH,EAAYI,OAAOC,8BAAgCD,OAAOC,gCCKnFC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,W","file":"static/js/main.b88487e8.chunk.js","sourcesContent":["import React from 'react';\r\nimport {del} from '../actions/index'\r\nimport {useDispatch} from 'react-redux'\r\n\r\nconst List = (props) =>{\r\n   const dispatch = useDispatch();\r\n  \r\n    return (\r\n     <>   \r\n        <i \r\n        className=\"fa fa-times\" \r\n        aria-hidden=\"true\"\r\n        onClick={()=>{\r\n            dispatch(del(props.id))\r\n        }}\r\n        ></i>\r\n        <li>{props.value}</li>\r\n        <br/>\r\n     </>   \r\n     );\r\n    \r\n}\r\nexport default List;","export const add = (data) => {\r\n    return{\r\n        type: \"Add\",\r\n        payload:{\r\n            id:new Date().getTime().toString(),\r\n            data:data\r\n        }\r\n    }\r\n}\r\nexport const del = (id) => {\r\n    return{\r\n        type: \"Del\",\r\n        id\r\n    }\r\n}\r\nexport const rem = () => {\r\n    return{\r\n        type: \"RemAll\"\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport List from './List'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport {add,rem} from '../actions/index'\r\n\r\nconst Todo = () => {\r\n const  obj= useSelector((state)=>state.change);\r\n const dispatch = useDispatch();\r\n   \r\nconst [item,setitem]= useState('');\r\n    return(\r\n        <>\r\n        <div className='main'>\r\n            <div className='container'>\r\n                <h1>ToDo List</h1>\r\n                <input type='text' placeholder=\"Enter items\" value={item} onChange={(event)=>{setitem(event.target.value)}}/>\r\n                <button className=\"additem\" onClick={()=>{\r\n                    item?dispatch(add(item))\r\n                    :alert(\"Enter something\")\r\n                    setitem('')\r\n                    }} >+</button>\r\n                <hr/>\r\n                <br/>\r\n                <ol>\r\n                {\r\n                    obj.list.map((val)=>{\r\n                        return(\r\n                            <List value={val.data} key={val.id} id={val.id}/>\r\n                        )\r\n                    })\r\n                }\r\n                </ol>\r\n                <div className=\"butc\">\r\n                <button className=\"but\" onClick={()=>dispatch(rem())}>Remove All</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from 'react';\nimport ToDo from './components/Todo'\n\nconst App = () => {\n   \n\n    return(\n        <>\n        <ToDo/>\n        </>\n    );\n}\n\nexport default App;\n","const initialstate={\r\n    list:[]\r\n}\r\n\r\nconst change = (state=initialstate,action)=>{\r\n    switch(action.type){\r\n        case \"Add\": \r\n        const {id,data}=action.payload;\r\n\r\n        return{\r\n            ...state,\r\n            list:[\r\n                ...state.list,\r\n                {\r\n                    id:id,\r\n                    data:data\r\n                }\r\n            ]\r\n        }\r\n        case \"Del\":\r\n                const ne = state.list.filter((obj)=>obj.id!==action.id)\r\n            return{\r\n                ...state,\r\n                list:ne\r\n            }\r\n        case \"RemAll\":\r\n            return{\r\n                ...state,\r\n                list:initialstate.list\r\n            }    \r\n        default: return state\r\n    }\r\n}\r\nexport default change;","import { combineReducers } from \"redux\";\r\nimport change from './adddel'\r\n\r\nconst rootreducer= combineReducers({\r\n    change\r\n})\r\n\r\nexport default rootreducer;","import { createStore } from \"redux\";\r\nimport rootreducer from './reducer/index'\r\n\r\nconst store =createStore(rootreducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './components/App.css';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './store'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}